- name: copy modprobe modules
  template: 
    src: '{{ item }}'
    dest: /etc/modules-load.d/ 
    owner: root 
    group: root
  with_items:
      - k8s-redhat-modules.conf
      - k8s-ipvs-modules.conf
  when: ansible_os_family == 'RedHat'
- name: Add the ipvs-modules module
  modprobe: 
    name: '{{ item }}'
    state: present
  with_items:
      - ip_vs
      - ip_vs_rr
      - ip_vs_wrr
      - ip_vs_sh
      - nf_conntrack_ipv4
  when: ansible_os_family == 'RedHat'
- name: copy "{{ item }}"
  template: 
    src: '{{ item }}'
    dest: /etc/modules-load.d/ 
    owner: root 
    group: root
  with_items:
      - k8s-debian-modules.conf
      - k8s-ipvs-modules.conf
  when: ansible_os_family == 'Debian'
- name: Add the ipvs-modules module
  modprobe: 
    name: '{{ item }}'
    state: present
  with_items:
      - ip_vs
      - ip_vs_rr
      - ip_vs_wrr
      - ip_vs_sh
      - nf_conntrack
  when: ansible_os_family == 'Debian'
- name: copy "{{ item }}"
  template: 
    src: '{{ item }}'
    dest: /etc/modules-load.d/ 
    owner: root 
    group: root
  with_items:
      - k8s-debian-modules.conf
      - k8s-ipvs-modules.conf
  when: ansible_os_family == 'Suse'
- name: Add the ipvs-modules module
  modprobe: 
    name: '{{ item }}'
    state: present
  with_items:
      - ip_vs
      - ip_vs_rr
      - ip_vs_wrr
      - ip_vs_sh
      - nf_conntrack
  when: ansible_os_family == 'Suse'  
- name: Change various sysctl-settings, look at the sysctl-vars file for documentation
  sysctl:
    name: '{{ item.key }}'
    value: '{{ item.value }}' 
    sysctl_set: yes 
    state: present 
    reload: yes
    ignoreerrors: yes
  with_items:
      - { key: 'net.ipv4.tcp_slow_start_after_idle', value: '0' }
      - { key: 'net.core.rmem_max', value: '16777216' }
      - { key: 'fs.inotify.max_user_watches', value: '524288' }
      - { key: 'kernel.softlockup_all_cpu_backtrace', value: '1' }
      - { key: 'kernel.softlockup_panic', value: '1' }
      - { key: 'fs.file-max', value: '2097152' } 
      - { key: 'fs.nr_open', value: '2097152' }
      - { key: 'fs.inotify.max_user_instances', value: '8192' }
      - { key: 'fs.inotify.max_queued_events', value: '16384' }
      - { key: 'vm.max_map_count', value: '262144' }
      - { key: 'net.core.netdev_max_backlog', value: '16384' }
      - { key: 'net.ipv4.tcp_wmem', value: '4096 12582912 16777216' }
      - { key: 'net.core.wmem_max', value: '16777216' }
      - { key: 'net.core.somaxconn', value: '32768' }
      - { key: 'net.ipv4.ip_forward', value: '1' }
      - { key: 'net.ipv4.tcp_max_syn_backlog', value: '8096' }
      - { key: 'net.bridge.bridge-nf-call-iptables', value: '1' }
      - { key: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
      - { key: 'net.bridge.bridge-nf-call-arptables',value: '1' }
      - { key: 'net.ipv4.tcp_rmem', value: '4096 12582912 16777216' }
      - { key: 'vm.swappiness', value: '0' }
      - { key: 'kernel.sysrq', value: '1' }
      - { key: 'net.ipv4.neigh.default.gc_stale_time', value: '120' }
      - { key: 'net.ipv4.conf.all.rp_filter', value: '0' }
      - { key: 'net.ipv4.conf.default.rp_filter', value: '0' }
      - { key: 'net.ipv4.conf.default.arp_announce', value: '2' }
      - { key: 'net.ipv4.conf.lo.arp_announce', value: '2' }
      - { key: 'net.ipv4.conf.all.arp_announce', value: '2' }
      - { key: 'net.ipv4.tcp_max_tw_buckets', value: '5000' }
      - { key: 'net.ipv4.tcp_syncookies', value: '1' }
      - { key: 'net.ipv4.tcp_synack_retries', value: '2' }
      - { key: 'net.ipv6.conf.lo.disable_ipv6', value: '1' }
      - { key: 'net.ipv6.conf.all.disable_ipv6', value: '1' }
      - { key: 'net.ipv6.conf.default.disable_ipv6', value: '1' }
      - { key: 'net.ipv4.ip_local_port_range', value: '1024 65535' }
      - { key: 'net.ipv4.tcp_keepalive_time', value: '600' }
      - { key: 'net.ipv4.tcp_keepalive_probes', value: '10' }
      - { key: 'net.ipv4.tcp_keepalive_intvl', value: '30' }
      - { key: 'net.nf_conntrack_max', value: '25000000' }
      - { key: 'net.netfilter.nf_conntrack_max', value: '25000000' }
      - { key: 'net.netfilter.nf_conntrack_tcp_timeout_established', value: '180' }
      - { key: 'net.netfilter.nf_conntrack_tcp_timeout_time_wait', value: '120' }
      - { key: 'net.netfilter.nf_conntrack_tcp_timeout_close_wait', value: '60' }
      - { key: 'net.netfilter.nf_conntrack_tcp_timeout_fin_wait', value: '12' }
- name: Add or modify hard nofile limits for wildcard domain
  pam_limits:
    domain: '*'
    limit_type: '{{ item.key }}'
    limit_item: '{{ item.item }}'
    value: '{{ item.value }}'
  with_items:
      - { key: 'soft', item: 'nofile', value: '655350'  }
      - { key: 'hard', item: 'nofile', value: '655350'  }
      - { key: 'soft', item: 'nproc', value: '655350'  }
      - { key: 'hard', item: 'nproc', value: '655350'  }
      - { key: 'soft', item: 'core', value: 'unlimited'  }
      - { key: 'hard', item: 'core', value: 'unlimited'  }
- name: Add or modify  nofile limits for wildcard domain
  pam_limits:
    dest: '/etc/security/limits.d/20-nproc.conf'
    domain: '{{ item.domain }}'
    limit_type: '{{ item.key }}'
    limit_item: '{{ item.item }}'
    value: '{{ item.value }}'
  with_items:
      - { domain: '*', key: 'soft', item: 'nproc', value: '655350'  }
      - { domain: 'root', key: 'soft', item: 'nproc', value: '655350'  }
  when: ansible_distribution_major_version == '7'
- name: Disable SELinux
  selinux:
    state: disabled
  when: ansible_os_family == 'RedHat'
- name: Enable service firewalld , and not touch the state
  service:
    name: firewalld 
    enabled: no
  when: ansible_os_family == 'RedHat'
- name: Stop service firewalld , if started
  service:
    name: firewalld 
    state: stopped
  when: ansible_os_family == 'RedHat'
- name: Enable service firewalld , and not touch the state
  service:
    name: firewalld 
    enabled: no
  when: ansible_os_family == 'Suse'
- name: Stop service firewalld , if started
  service:
    name: firewalld 
    state: stopped
  when: ansible_os_family == 'Suse'  
- name: Enable service ufw , and not touch the state
  service:
    name: ufw 
    enabled: no
  when: ansible_facts.distribution == 'Ubuntu'
- name: Stop service ufw , if started
  service:
    name: ufw 
    state: stopped  
  when: ansible_facts.distribution == 'Ubuntu'
- name: create additional limits
  lineinfile: 
    dest: /etc/profile
    line: '{{ item.key }}'
  with_items:
      - { key: 'ulimit -u 655350' }
      - { key: 'ulimit -n 655350'  }
      - { key: 'ulimit -d unlimited' }
      - { key: 'ulimit -m unlimited' }
      - { key: 'ulimit -s unlimited' }
      - { key: 'ulimit -v unlimited' }
      - { key: 'ulimit -t unlimited' }
      - { key: 'ulimit -c unlimited' }
  when: ansible_facts.distribution == 'Ubuntu'
- name: remove swapfile
  lineinfile: 
    dest: /etc/fstab 
    regexp: "^/swapfile" 
    line: "#/swapfile" 
    state: absent
  when: ansible_facts.distribution == 'Ubuntu'    
- name: is set sources.list
  replace:
    path: /etc/apt/sources.list
    regexp: 'archive.ubuntu.com'
    replace: 'mirrors.aliyun.com'
  when: ansible_facts.distribution == 'Ubuntu'
- name: Only run "update_cache=yes"
  apt:
    update_cache: yes
  when: ansible_facts.distribution == 'Ubuntu'
- name: Only run "update *"
  apt:
    name: "*"
    state: latest
  register: ubuntu_upack_source
  when: ansible_facts.distribution == 'Ubuntu'
- name: remove RedHat swap
  lineinfile: 
    dest: /etc/fstab
    regexp: "^/dev/mapper/centos-swap"
    line: "#/dev/mapper/centos-swap" 
    state: absent
  when: ansible_os_family == 'RedHat'
- name: CentOS 7 repo
  get_url:
    url: https://mirrors.aliyun.com/repo/Centos-7.repo
    dest: /etc/yum.repos.d/CentOS-Base.repo
    force: yes
  when: ansible_distribution_major_version == '7'
- name: CentOS 7 epel.repo
  get_url:
    url: http://mirrors.aliyun.com/repo/epel-7.repo
    dest: /etc/yum.repos.d/epel.repo
  when: ansible_distribution_major_version == '7'
- name: CentOS 8 repo
  get_url:
    url: https://mirrors.aliyun.com/repo/Centos-8.repo
    dest: /etc/yum.repos.d/CentOS-Base.repo
    force: yes
  when: ansible_distribution_major_version == '8'
- name: install the epel-release rpm from a remote repo
  yum:
    name: https://mirrors.aliyun.com/epel/epel-release-latest-8.noarch.rpm
    state: present
  when: ansible_distribution_major_version == '8'
- name: enabled centos8 epel
  lineinfile: 
    dest: '/etc/yum.repos.d/CentOS-Base.repo'
    regexp: "^enabled=0"
    line: "enabled=1" 
  when: ansible_distribution_major_version == '8' 
- name: remove centos8 epel
  lineinfile: 
    dest: '/etc/yum.repos.d/{{ item }}'
    regexp: "^metalink"
    line: "#metalink" 
    state: absent
  with_items:
      - epel-modular.repo
      - epel-playground.repo
      - epel-testing-modular.repo
      - epel-testing.repo
      - epel.repo
  when: ansible_distribution_major_version == '8'  
- name: is set centos8 epel
  replace:
    path: '/etc/yum.repos.d/{{ item }}'
    regexp: '^#baseurl=https://download.fedoraproject.org/pub'
    replace: 'baseurl=https://mirrors.aliyun.com'
  with_items:
      - epel-modular.repo
      - epel-playground.repo
      - epel-testing-modular.repo
      - epel-testing.repo
      - epel.repo
  when: ansible_distribution_major_version == '8'
#- name: Remove /etc/yum.repos.d/CentOS-AppStream.repo
#  file:
#    path: "/etc/yum.repos.d/CentOS-AppStream.repo"
#    state: absent
#  ignore_errors: True
#  when: ansible_distribution_major_version == '8'  
- name: upgrade all packages
  yum:
    name: '*'
    state: latest
    lock_timeout: 36000
  register: redhat_upack_source
  when: ansible_os_family == 'RedHat'
- name: centos8 dnf Install
  dnf: 
    name:  
      - epel-release
    state: latest
  when: ansible_pkg_mgr == "dnf"
- name: centos8 dnf Install
  dnf: 
    name:
      - dnf-utils
      - ipvsadm
      - telnet
      - wget
      - net-tools
      - conntrack
      - ipset
      - jq
      - iptables
      - curl
      - sysstat
      - libseccomp
      - socat
      - nfs-utils
      - fuse
      - lvm2
      - device-mapper-persistent-data
      - fuse-devel
    state: latest
  when: ansible_pkg_mgr == "dnf"
- name: centos7 yum Install
  yum: 
    name:  
      - epel-release
      - yum-plugin-fastestmirror
    state: latest
  when: ansible_pkg_mgr == "yum"
- name: centos7 yum Install
  yum: 
    name:
      - yum-utils
      - ipvsadm
      - telnet
      - wget
      - net-tools
      - conntrack
      - ipset
      - jq
      - iptables
      - curl
      - sysstat
      - libseccomp
      - socat
      - nfs-utils
      - fuse
      - lvm2
      - device-mapper-persistent-data
      - fuse-devel
      - ceph-common
    state: latest
  when: ansible_pkg_mgr == "yum"
- name: Only run "update_cache=yes"
  apt:
    update_cache: yes
  when: ansible_pkg_mgr == "apt"
- name: ubuntu apt Install
  apt: 
    name:
      - ipvsadm
      - telnet
      - wget
      - net-tools
      - conntrack
      - ipset
      - jq
      - iptables
      - curl
      - sysstat
      - libltdl7
      - libseccomp2
      - socat
      - nfs-common
      - fuse
      - ceph-common
      - software-properties-common
    state: latest
  when: ansible_pkg_mgr == "apt"
- name: remove net.ipv4.ip_forward suse yast set forwarding
  sysctl:
    name: net.ipv4.ip_forward 
    state: absent
    sysctl_file: /etc/sysctl.d/70-yast.conf
  ignore_errors: True  
  when: ansible_os_family == 'Suse'    
- name: remove swapfile
  lineinfile: 
    dest: /etc/fstab 
    regexp: "swap" 
    line: "#UUID"
    state: absent
  when: ansible_os_family == 'Suse' 

- name: remvoe repository
  zypper_repository:
    name: openSUSE-Leap-{{ ansible_distribution_version }}-1
    state: absent
  ignore_errors: True
  when: ansible_pkg_mgr == "zypper" 
- name: add repository
  zypper_repository:
    name: '{{ item.value }}'
    repo: '{{ item.key }}'
    state: present
  with_items:    
      - { key: 'https://mirrors.ustc.edu.cn/opensuse/distribution/leap/{{ ansible_distribution_version }}/repo/oss/', value: 'USTC:{{ ansible_distribution_version }}:OSS' }
      - { key: 'https://mirrors.ustc.edu.cn/opensuse/distribution/leap/{{ ansible_distribution_version }}/repo/non-oss/', value: 'USTC:{{ ansible_distribution_version }}:NON-OSS' }
      - { key: 'https://mirrors.ustc.edu.cn/opensuse/update/leap/{{ ansible_distribution_version }}/oss/', value: 'USTC:{{ ansible_distribution_version }}:UPDATE-OSS' }
      - { key: 'https://mirrors.ustc.edu.cn/opensuse/update/leap/{{ ansible_distribution_version }}/non-oss/', value: 'USTC:{{ ansible_distribution_version }}:UPDATE-NON-OSS ' }
  ignore_errors: True
  when: ansible_pkg_mgr == "zypper"
- name: Refresh all repos 
  zypper_repository:
    repo: '*'
    runrefresh: yes
  ignore_errors: True
  when: ansible_pkg_mgr == "zypper"    
#- name: Only run
#  zypper:
#    name: '*'
#    state: dist-upgrade
#  ignore_errors: True  
#  when: ansible_pkg_mgr == "zypper" 
- name: Update all packages
  zypper:
    name: '*'
    state: latest
  register: suse_upack_source
  environment:
    ZYPP_LOCK_TIMEOUT: 3600
  when: ansible_pkg_mgr == "zypper"
- name: Suse zypper Install
  zypper: 
    name:
      - ipvsadm
      - telnet
      - wget
      - net-tools
      - conntrackd
      - ipset
      - jq
      - iptables
      - curl
      - sysstat
      - libseccomp2
      - socat
      - nfs-utils
      - fuse
      - lvm2
      - apparmor-parser 
      - apparmor-parser-lang 
      - catatonit  
      - less 
      - libbsd0 
      - liblvm2cmd2_03 
      - libnet9 
      - libpcre2-8-0 
      - libprotobuf-c1
      - libsha1detectcoll1  
      - perl-Error 
      - rsync 
      - vim
      - tree
      - iputils
      - net-tools-deprecated
      - device-mapper
      - fuse-devel
      - ceph-common
    state: latest
  when: ansible_pkg_mgr == "zypper"    
- name: Reboot a slow machine that might have lots of updates to apply
  reboot:
    reboot_timeout: 3600
  when: ubuntu_upack_source.changed or redhat_upack_source.changed or suse_upack_source.changed
